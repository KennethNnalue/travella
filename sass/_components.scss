/////////////////////////////////////////////////////////
/////////// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

/////////////////////////////////////////////////////////
/////////// SEARCH
.search {
  flex: 0 0 40%; // grow:0, shrink:no, flex-basis 40% width of the container
  display: flex;
  align-items: center; // centeres elements along the cross axis
  justify-content: center; // centeres elements along the main axis
  position: relative;

  @media only screen and (max-width: $-bp-smallest) {
    order: 1; /// to arrange flex items ijn order according to their number, default is 0
    flex: 0 0 100%; // occupy 100 percent of the width
    background-color: var(--color-grey-light-2);
  }

  &__input {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    border-radius: 20rem;
    padding: 0.7rem 2rem;
    width: 90%;
    margin-right: -3.5rem; //  so that the search button will move on top of the  search input
    transition: all 0.3s;

    &:focus {
      width: 100%;
      outline: none;
      background-color: var(--color-grey-light-3);
    }

    &:focus ~ .search__suggestion {
      visibility: visible;
      opacity: 1;
    }
    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__input:focus + &__button {
    //when the input is focused, select the adjacent sibling element with class &__button
    background-color: var(--color-grey-light-3);
  }
  &__button {
    border: none;
    color: inherit;
    background-color: var(
      --color-grey-light-2
    ); // same backround as the input to look the same

    &:focus {
      outline: none;
    }

    :active {
      transform: translateY(
        0.2rem
      ); // move the button down a little bit when clicked on
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }

  ////// SEARCH SUGGESTION

  &__suggestion {
    @include dropdown-container;

    &-details {
      @include dropdown-item;
    }

    &-photo-box {
      margin-right: 0.5rem;
    }

    &-image {
      height: 6.5rem;
      width: 6.5rem;
      border-radius: 0.4rem;
    }

    &-info-box {
      margin-right: auto;
      display: flex;
      flex-direction: column;
    }

    &__name {
      @include user-name;
    }

    &__location {
      font-size: 1rem;
      color: var(--color-grey-dark-3);
    }

    &-stars-box {
      display: flex;
    }
    &-star {
      width: 1.5rem;
      height: 1.5rem;
      fill: var(--color-primary);
      margin-right: 0.8rem;
    }

    &-rating {
      font-size: 2.25rem;
      font-weight: 300;
      color: var(--color-primary);
    }
  }
}

/////////////////////////////////////////////////////////
/////////// USER NAVIGATION
.user-nav {
  display: flex;
  align-self: stretch; // stretch this element to ocupy 100% height of the container(header)
  align-items: center;

  & > * {
    // select all the direct children of the user.nav
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    display: flex;
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 1.02rem;
    height: 1.75rem;
    width: 1.75rem;
    color: white;
    background-color: var(--color-primary);
    border-radius: 50%;
    border: none;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // use the flex properties to align the text (flexbox works on text directly too)
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user {
    &-photo {
      height: 3.75rem;
      border-radius: 50%;
      margin-right: 1rem;
    }

    &-name {
    }
  }

  ////////////////////////////////////////////////////////
  //////// USER NAV BOOKMARKS
  &__bookmarks {
    @include dropdown-container;

    width: 500%;

    &-heading {
      @include dropDown-header;
      display: block;
      margin: 1rem auto;
    }
    &-item {
      @include dropdown-item;
    }

    &-item--active {
      border-left: 0.2rem solid var(--color-primary);
    }

    &-img {
      height: 4.5rem;
      width: 4.5rem;
      border-radius: 50%;
      margin-right: 0.5rem;
    }
    &-details {
      display: flex;
      flex-direction: column;
      margin-right: auto;
    }

    &-name {
      @include user-name;
      font-weight: 500;
    }
    &-text {
      @include user-details;
    }

    &-date-time {
      display: flex;

      flex-direction: column;
      @include user-details;
    }

    &-date {
    }
  }
  &__icon-box:hover &__bookmarks {
    visibility: visible;
    opacity: 1;
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//SIDE BAR

/////////////////////////////////////////////////////////////////
/////////// SIDE NAVIGATION

.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;
  &__item {
    position: relative;
    &:not(:last-child) {
      margin-bottom: 0.5rem;
      @media only screen and (max-width: $-bp-medium) {
        margin: 0;
      }
    }

    @media only screen and (max-width: $-bp-medium) {
      flex: 1; // each item will grow to ocupy available space, (They will share it equally)
    }
  }

  @media only screen and (max-width: $-bp-medium) {
    display: flex;

    margin: 0;
  }

  /* 
   1. The before psudo element is created inside the item and positioned to be on top the list item. 

   2. On the innitial state, we make this element invisible by scaling the height (ScaleY) to zero

   3. When this ::before psudo element is hovered or an item is in active state, the ::before 
      psudo element is first scaled to 1 to make it active, and the width is grown to 100% to cover
      the whole item. We achive this effect by setting the transition of different properties on the
      innitial state to defferent timming, timming funtions, and delays.
   
   4. We set the z-index of the link item to be higher than the psudo element to make our link item
      visible when the ::before psudo element grows to 100% width of the link item
  
  */
  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0.3rem;
    background-color: var(--color-primary);
    transform: scaleY(0);
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
      background-color 0.1s;
  }

  //When item is hovered, select the ::before psudo element, Also When item is in active(clicked)
  // state, select the ::before psudo element(use to set the current active item on the list)
  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  // When item is active(clicked) select the ::before psudo element
  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link {
    &,
    &:link,
    &:visited {
      color: var(--color-grey-light-1);
      text-decoration: none;
      display: block;
      padding: 1.5rem 3rem;
      display: flex;
      align-items: center;
      position: relative;
      z-index: 2; // position must be set for z-index to work
      @media only screen and (max-width: $-bp-medium) {
        justify-content: center;
        padding: 2rem;
      }

      @media only screen and (max-width: $-bp-small) {
        flex-direction: column;
        padding: 1.5rem 0.5rem;
      }
    }
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor;
    // currentColor is the color of the current or parent element, it also inherit the same on hover

    @media only screen and (max-width: $-bp-small) {
      width: 1.5rem;
      height: 1.5rem;
      margin: 0 0 0.7rem 0;
    }
  }
  &__text {
  }
}

.legal {
  font-size: 1.2rem;
  text-align: center;
  padding: 2.5rem;
  color: var(--color-grey-light-4);

  @media only screen and (max-width: $-bp-medium) {
    display: none;
  }
}

/////////////////////////////////////////////////////////////////
/////////// GALLERY

.gallery {
  display: flex;
  &__photo {
    width: 100%;
    display: block; // Image should always be displayed as a block or inline-block to avoid white
    // spaces beneth it when left as an inline elememnt
  }
}

/////////////////////////////////////////////////////////////////
/////////// HOTEL OVERVIEW

.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    padding: 1.5rem 3rem;

    @media only screen and (max-width: $-bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }
  }

  &__stars {
    margin-right: auto; // to make an element occupy enough space that it can contain along X axis
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    display: flex;
    align-items: center;
    font-size: 1.2rem;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }
  &__rating {
    background-color: var(--color-primary);
    margin-left: 3rem;
    color: #fff;
    padding: 0 2.25rem;
    align-self: stretch; // to make it stretch to occupy the entire width
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    @media only screen and (max-width: $-bp-small) {
      padding: 0 1.5rem;
    }

    &-average {
      font-size: 2.25rem;
      font-weight: 300;
      margin-bottom: -0.3rem; //

      @media only screen and (max-width: $-bp-small) {
        font-size: 1.8rem;
      }
    }

    &-count {
      font-size: 1rem;
      text-transform: uppercase;

      @media only screen and (max-width: $-bp-small) {
        font-size: 0.8rem;
      }
    }
  }
}

/////////////////////////////////////////////////////////////////
/////////// PARAGRAPH

.paragragh:not(:last-of-type) {
  margin-bottom: 2rem;
}

/////////////////////////////////////////////////////////////////
/////////// LIST
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem;
  border-top: var(--line);
  border-bottom: var(--line);
  display: flex;
  flex-wrap: wrap; // push the items to a new line when it's more than the conatiner width

  &__item {
    flex: 0 0 50%;
    margin-bottom: 0.7rem;
  }

  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    // For older Browsers
    background-image: url(../img/chevron-thin-right.svg);
    background-size: cover;

    /* 
    The mask property works on newer browsers, it works similarly to the clip property where you
    clip a backround image and see only the element on top of the background with the backround 
    image filling the element. In the case of mask, you set a background color on an image, set 
    mask size to cover the image, then you can now see the backround color through the image
    . this means the only visible part of the background will be the part covered by the image
    and the rest part of the background are clipped away and now invisible.
    This MASK is very useful when you cannot set the color of an element.
    */
    // Newer Browser

    @supports (-webkit-mask-image: url()) or (mask-image: url()) {
      background-color: var(--color-primary);
      -webkit-mask-image: url(../img/chevron-thin-right.svg);
      -webkit-mask-size: cover;
      mask-image: url(../img/chevron-thin-right.svg);
      mask-size: cover;
      background-image: none; // To avoid showing the backround image instead of our maked image
    }
  }
}

/////////////////////////////////////////////////////////////////
/////////// RECOMMEND
.recommend {
  display: flex;

  align-items: center;
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  padding: 3.5rem 0;

  &__count {
    margin-right: auto; // this helps create even space between this element and the next element
  }

  &__friends {
    display: flex;
  }

  &__photo {
    box-sizing: content-box; // adds the margin and padding into the parent element's box (effects
    // other elemts in the same box) It effects the contaning box
    border-radius: 50%;
    height: 4rem;
    width: 4rem;
    border: 0.3rem solid #fff;
    &:not(:last-child) {
      margin-right: -1.5rem;
    }
  }
}
/////////////////////////////////////////////////////////////////
/////////// USER REVIEWS

.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3.5rem;
  margin-bottom: 4.5rem;
  position: relative;
  overflow: hidden;

  @media only screen and (max-width: $-bp-medium) {
    padding: 2rem;
    margin-bottom: 3rem;
  }

  &__text {
    margin-bottom: 2rem;
    z-index: 10;
    position: relative;
  }

  &__user {
    display: flex;
    align-items: center;

    &-photo {
      border-radius: 50%;
      height: 4.5rem;
      width: 4.5rem;
      margin-right: 1.5rem;
    }

    &-box {
      margin-right: auto;
    }

    &-name {
      font-size: 1.1rem;
      font-weight: 600;
      text-transform: uppercase;
      margin-bottom: 0.4rem;
    }

    &-date {
      font-size: 1rem;
      color: var(--color-grey-dark-3);
    }
    &-rating {
      font-size: 2.25rem;
      font-weight: 300;
      color: var(--color-primary);
    }
  }

  &::before {
    content: "\201C";
    position: absolute;
    top: -2.75rem;
    left: -1rem;
    font-size: 20rem;
    line-height: 1;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    z-index: 1;
  }
}

/////////////////////////////////////////////////////////////////
/////////// CALL TO ACTION CTA

.cta {
  padding: 3.5rem 0;
  text-align: center;

  @media only screen and (max-width: $-bp-medium) {
    padding: 2.5rem 0;
  }

  &__book-now {
    font-size: 2rem;
    font-weight: 300;
    text-transform: uppercase;
    margin-bottom: 2.5rem;
  }
}

/////////////////////////////////////////////////////////////////
/////////// Button
.btn {
  cursor: pointer;
  position: relative;
  font-size: 1.7;
  font-weight: 300;
  text-transform: uppercase;
  border: none;
  border-radius: 100px;
  color: #fff;
  background-image: linear-gradient(
    to right,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  overflow: hidden;

  & > * {
    // select all child elements of btn

    display: inline-block;
    height: 100%;
    width: 100%;
    transition: all 0.5s;
  }

  &__visible {
    padding: 2rem 7.5rem;
  }

  &__invisible {
    padding: 2rem; // reduced the padding left and right to have enough space for the text
    position: absolute;
    top: -100%;
    left: 0;
  }
  &:hover {
    background-image: linear-gradient(
      to left,
      var(--color-primary-light),
      var(--color-primary-dark)
    );
  }
  &:hover &__visible {
    transform: translateY(100%);
  }

  &:hover &__invisible {
    top: 0; // to return it back to starting pointnof the container
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }

  &-inline {
    border: none;
    font-size: inherit;
    cursor: pointer;
    transition: all 0.2s;
    color: var(--color-primary);
    border-bottom: 0.1rem solid currentColor;
    padding-bottom: 0.2rem;
    display: inline-block;
    background-color: transparent;

    &:hover {
      color: var(--color-grey-dark-1);

      .arrow {
        margin-left: 0.8rem;
      }
    }

    &:focus {
      outline: none;
      animation: pulsate 1s infinite;
    }

    & .arrow {
      margin-left: 0.3rem;
      transition: margin-left 0.2s;
    }
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}
